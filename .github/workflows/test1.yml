# This is a basic workflow to help you get started with Actions

name: my_ci_test_

on:
  # push:
  #   branches: [ "main" ]
#     paths:
#       - "ci/**"
  workflow_dispatch:
    inputs:
      first:
        type: boolean
        description: please choose environment to deploy to
        options:
        - prod
        - stage
      app_name:
        type: boolean
        description: please choose environment to deploy to
        options:
        - aaa
        - aaa_bbb_ccc
# defaults:
#   run:
#     working-directory: test
    

jobs:
#   init:
#     runs-on: ubuntu-latest
#     outputs:
#       app_name: ${{ steps.setvars.outputs.app_name }}

#     steps:
#       - name: Set variables
#         id: setvars
#         run: |
#           if [[ "${{github.event_name}}" == "workflow_dispatch" ]]; then
#             echo "app_name=dispatch" >> $GITHUB_OUTPUT
#           fi

#           if [[ "${{github.event_name}}" == "push" ]]; then
#             echo "app_name=push" >> $GITHUB_OUTPUT
#           fi

    
#   call-workflow-passing-data:
#     needs: init
#     uses: yosefy/test-actions/.github/workflows/child.yaml@main
#     with:
#       app_name: "${{needs.init.outputs.app_name}}"
#     secrets:
#       npmrc: ${{ secrets[needs.init.outputs.app_name] }}

  local_job:
    runs-on: ubuntu-latest
    env:
      tocat: aaa_bbb_ccc
    steps:

      # - uses: actions/checkout@v3
      # - run: ls ../
      # - name: Load environment from YAML
      #   uses: doughepi/yaml-env-action@main
      #   with:
      #     files: "${{ github.workspace }}/test2/test.yaml"

      - name: Display read-yaml output1
        run: echo "${{ toJson(github.event.inputs) }}"
      # - name: Display read-yaml output2
      #   run: echo "${{ fromJSON(github.event.inputs) }}"
      
      - run: jq -r 'to_entries[] | select(.value == true) | .key' <<< ${{ toJSON(inputs) }}
#       - name: Set tocat
#         run: echo "tocat=$(echo ${{ github.workflow }}| cut -d'_' -f 2)" >> $GITHUB_ENV
#       - name: Set App Name
#         run: |
#           echo "aaa=TEST_SECRET" >> $GITHUB_ENV
#       - run: echo ${{ secrets[env.aaa] }} | sed 's/./& /g'
#       - run: echo "${{ env.tocat }}"
#       - name: echo aaa
#         run: echo ${{ env.APP_NAME }}
#       - run: echo ${{ github.workflow }}
#       - name: Dump GitHub context
#         id: github_context_step
#         run: echo '${{ toJSON(github) }}'
#       - name: Dump job context
#         run: echo '${{ toJSON(job) }}'
#       - name: Dump steps context
#         run: echo '${{ toJSON(steps) }}'
#       - name: Dump runner context
#         run: echo '${{ toJSON(runner) }}'
#       - name: Dump strategy context
#         run: echo '${{ toJSON(strategy) }}'
#       - name: Dump matrix context
#         run: echo '${{ toJSON(matrix) }}'
